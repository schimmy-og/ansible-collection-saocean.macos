---
# tasks file for role_python

- name: Check installed Versions of Python
  ansible.builtin.command: pyenv versions
  changed_when: false
  become: true
  become_user: "{{ ansible_env.USER }}"
  register: pyenv_versions

- name: Install pyenv Global Python Version
  ansible.builtin.command: pyenv install {{ global_python_version }}
  register: pyenv_install
  changed_when: pyenv_install is search('Installed Python-'+ global_python_version + ' to '+ ansible_env.HOME + '/.pyenv/versions/' + global_python_version)
  become: true
  become_user: "{{ ansible_env.USER }}"
  when: >
    not (global_python_version in pyenv_versions.stdout)

- name: Show pyenv Install output if completed
  ansible.builtin.debug:
    msg: "{{ pyenv_install.stdout_lines + pyenv_install.stderr_lines }}"
  when: pyenv_install.changed

- name: Set pyenv Global Python Version
  ansible.builtin.shell:
    cmd: pyenv global {{ global_python_version }} && pyenv versions
  register: pyenv_global_set
  changed_when: >
    (pyenv_global_set is search('\* ' + global_python_version + '\(set by ' + ansible_env.HOME + '/.pyenv/version\)'))
  become: true
  become_user: "{{ ansible_env.USER }}"
  when: >
    not (pyenv_versions is search('\* ' + global_python_version + '\(set by ' + ansible_env.HOME + '/.pyenv/version\)'))

- name: Get pyenv Version
  ansible.builtin.command: pyenv versions
  changed_when: false
  become: true
  become_user: "{{ ansible_env.USER }}"
  register: pyenv_versions

- name: Show pyenv Version
  ansible.builtin.debug:
    msg: "{{ pyenv_versions.stdout_lines }}"